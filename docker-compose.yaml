version: "3.8"

networks:
  monitor-net:
    driver: bridge

services:
  mc:
    image: itzg/minecraft-server
    ports:
      - 25565:25565
    env_file:
      - config.env
    environment:
      EULA: "TRUE"
      # main
      VERSION: 1.19.3
      TYPE: FORGE # Set server type (vs the default of vanilla)
      FORGEVERSION: "RECOMMENDED" # without this, will be load latest
      DEBUG: "FALSE"

      # server settings
      OVERRIDE_SERVER_PROPERTIES: "TRUE"
      ONLINE_MODE: "FALSE" # accept no license
      SERVER_NAME: "Server"
      MOTD: "Alexander's Minecraft server"
      ICON: "https://habrastorage.org/webt/db/qa/tm/dbqatmtshjk76o9gcwoks7mg51y.jpeg"
      DIFFICULTY: "easy"
      OPS: "sapfir" # don't work

      # optimizations
      MAX_PLAYERS: 10
      INIT_MEMORY: 2G
      MAX_MEMORY: 6G
      USE_AIKAR_FLAGS: "TRUE"
      TZ: "Europe/Moscow"
      ENABLE_AUTOPAUSE: "TRUE"
      MAX_TICK_TIME: "-1"

    tty: true
    stdin_open: true
    restart: unless-stopped

    volumes:
    # use a named, managed volume for data volume
    - mc_forge:/data
    # attach local host directory "mods" in same directory as this compose file
    # all mods in this directory get copied into /data/mods at startup
    - ./mods:/mods:ro


  backups:
    image: itzg/mc-backup
    env_file:
      - config.env
    environment:
      BACKUP_INTERVAL: "12h"
      # instead of network_mode below, could declare RCON_HOST
      # RCON_HOST: mc
    volumes:
    # mount the same volume used by server, but read-only
    - mc_forge:/data:ro
    # use a host attached directory so that it in turn can be backed up
    # to external/cloud storage
    - ./mc-backups:/backups
    # share network namespace with server to simplify rcon access
    network_mode: "service:mc"

  monitor:
    image: itzg/mc-monitor
    command: export-for-prometheus
    environment:
      EXPORT_SERVERS: mc
      # DEBUG: "true"
    depends_on:
      - mc
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - "8180:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-tsdb:/prometheus
    depends_on:
      - monitor
  grafana:
    image: grafana/grafana-oss:${GRAFANA_VERSION:-8.3.3}
    env_file:
      - config.env
    ports:
      - "8888:3000"
    volumes:
      - grafana-lib:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
  
  telegraf:
    image: telegraf
    volumes:
      - ./config/telegraf:/etc/telegraf
    expose:
      - 9283
    restart: unless-stopped

  minecraftexporter:
    # image: joshi425/minecraft_exporter
    build: ./minecraft-exporter-master
    ports:
      - "8000:8000"
    volumes:
      - mc_forge:/data/world:ro
    env_file:
      - config.env
    environment:
      RCON_HOST: mc
    depends_on:
      - mc
  nodeexporter:
    image: prom/node-exporter:v1.0.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100

volumes:
  # declared the named volume, but use default/local storage engine
  mc_forge: {}
  prometheus-tsdb: {}
  grafana-lib: {}